#!/usr/bin/python3
# -*- coding: utf-8 -*-

'''
 Title:        reduce_blast_file.py
 Author:    Thomas Brockm√∂ller
 Description:
     reduces a BLAST output file by a geneList
'''

import argparse

parser = argparse.ArgumentParser(
    description='If you find bugs please contact: tbrockmoeller@ice.mpg.de')

parser.add_argument('-i', '--input', metavar='file', type=str,
                    help="input blast file",
                    required=True)
parser.add_argument('-o', '--output', metavar='file', type=str,
                    help="output blast file",
                    required=True)
parser.add_argument('-g', '--genes', metavar='file', type=str,
                    help="file with gene list",
                    required=False)
parser.add_argument('-s', '--species', metavar='string', type=str,
                    help="species list for genes (to make it more efficient)",
                    required=False)
parser.add_argument('-k', '--keep', action="store_true",
                    help="keep selected genes instead of removing (default: remove genes)",
                    required=False)
parser.add_argument('-r', '--reject', action="store_true",
                    help="create reject file (optional)",
                    required=False)
args = parser.parse_args()

file_INPUT_BLAST = args.input
file_GENE_LIST = args.genes
file_OUTPUT_BLAST = args.output

var_KEEP = False
var_REJECT = False
file_GENE_LIST = False

var_SPECIES_LIST = ['ara', 'csa', 'can', 'mgu', 'ptr', 'nat', 'nio', 'sly', 'stu', 'vvi', 'sme', 'nis', 'nit', 'pin', 'pax']

if args.genes:
    file_GENE_LIST = args.genes

if args.species:
    var_SPECIES_LIST = set(args.species.split(','))

if args.reject:
    var_REJECT = True

if args.keep:
    var_KEEP = True

print('READ GENE LIST')
geneList = []
if file_GENE_LIST:
    f = open(file_GENE_LIST, 'r')
    for line in f:
        geneList.append(line.strip())
    f.close()

geneList = set(geneList)

print('READ BLAST FILE AND WRITE NEW FILE')
f = open(file_INPUT_BLAST, 'r')
nf = open(file_OUTPUT_BLAST, 'w')
if var_REJECT:
    nrf = open(file_OUTPUT_BLAST + '.rejected', 'w')

for line in f:
    values = line.strip().split()
    if values[0].split('|')[0] in var_SPECIES_LIST or values[1].split('|')[0] in var_SPECIES_LIST:
        if not var_KEEP:
            if values[0] in geneList or values[1] in geneList:
                if var_REJECT:
                    nrf.write(line)
            else:
                nf.write(line)
        else:
            if values[0] in geneList or values[1] in geneList:
                nf.write(line)
            else:
                if var_REJECT:
                    nrf.write(line)
    else:
        nf.write(line)
if var_REJECT:
    nrf.close()
nf.close()
f.close()
